2.Lỗi đệ quy thiếu base case. Hãy chạy thử hàm sau, bạn thấy hiện tượng gì? Giải thích lí do.
double H(int N) { 
   return H(N-1) + 1.0/N; 
}
-->Không hiện kết quả vì thiếu trường hợp cơ sở( không có giá trị khởi tạo, phải gán giá trị cho N đầu tiên).
3.Lỗi công thức đệ quy. Hãy chạy thử hàm sau, bạn thấy hiện tượng gì? Giải thích lí do.
double H(int N) { 
   if (N == 1) return 1.0;
   return H(N) + 1.0/N; 
}
--> khi N=2 or cao hơn thì không có giá trị khởi tạo để tinh -> đệ quy không chạy được.
4.Đệ quy quá sâu. Hãy chạy thử hàm sau với N = 5000, bạn thấy hiện tượng gì? Nếu chưa thấy gì thì tăng giá trị của N cho đến khi thấy chương trình trục trặc. Giải thích lí do.
double H(int N) { 
   if (N == 1) return 0.0;
   return H(N-1) + 1.0/N; 
}
-->Bản chất chỉ là cộng các phân số với mẫu tăng dần(1/2+1/3+1/4+1/5....) nếu làm theo đệ quy thì sẽ bị lặp rất nhiều lần gây ra tốn bộ nhớ dẫn đến chương trình không chạy được.
5.
Đệ quy tính toán quá nhiều. Cho cài đặt sau của hàm tính dãy fibonacii.Hãy thử gọi với n đủ lớn để thấy chương trình chạy lâu. Cài lại bằng vòng lặp để so sánh thời gian chạy.
long F(int n) { 
   if (n == 0) return 0; 
   if (n == 1) return 1; 
   return F(n-1) + F(n-2); 
}
cài lại bằng vòng lặp:
int a1 = 0, a2 = 1;
	if(n == 0) return 0;
	if(n == 1) return 1;
	int a;
	for(int i=2;i<=n;i++){
		a = a1 + a2;
		a1 = a2;
		a2 = a;
	} 
--> vòng lặp chạy nhanh hơn đệ quy.
